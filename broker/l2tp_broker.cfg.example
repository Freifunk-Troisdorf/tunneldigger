[broker]
; IP address the broker will listen and accept tunnels on
address=172.31.1.100

; Ports where the broker will listen on
; Aktuell ist es der fastd-port dieser Hood +10000
port=20001

; Interface with that IP address
interface=ens3

; Tunnel id base
; Diesen Wert um max_tunnels des "vorherigen"  Brokers erh√∂hen
; Die Ports werden aus port_base + tunnel_id_base + n gebildet (n Element aus 0 - max_tunnel)
tunnel_id_base=100

; Tunnel port base. This port is not visible to clients, but must be free on the server.
; This port is used by the actual l2tp tunnel, but tunneldigger sets up NAT rules so that clients
; can keep using the control port.
port_base=10000

; Maximum number of tunnels that will be allowed by the broker
max_tunnels=100

; Namespace (for running multiple brokers); note that you must also
; configure disjunct ports, and tunnel identifiers in order for
; namespacing to work
namespace=hoodname(short e.g. sw)

; Reject connections if there are less than N seconds since the last connection.
; Can be less than a second (e.g., 0.1).
connection_rate_limit=2

; Set PMTU to a fixed value.  Use 0 for automatic PMTU discovery.  A non-0 value also disables
; PMTU discovery on the client side, by having the server not respond to client-side PMTU
; discovery probes.
pmtu=0

; The batman device of this Hood (e.g. bat2)
batdev=bat0

[log]
; Verbosity
verbosity=DEBUG
; Should IP addresses be logged or not
log_ip_addresses=false

[hooks]
; Note that hooks are called asynchonously!

; Arguments to the session.{up,pre-down,down} hooks are as follows:
;
;    <tunnel_id> <session_id> <interface> <mtu> <endpoint_ip> <endpoint_port> <local_port> <uuid>
;
; Arguments to the session.mtu-changed hook are as follows:
;
;    <tunnel_id> <session_id> <interface> <old_mtu> <new_mtu> <uuid>
;

; Called after the tunnel interface goes up
session.up=/srv/tunneldigger/tunneldigger/broker/scripts/tunnel.up
; Called just before the tunnel interface goes down
; (However, due to hooks being asynchonous, the hook may actually execute after the interface was
; already removed.)
session.pre-down=
; Called after the tunnel interface goes down
session.down=/srv/tunneldigger/tunneldigger/broker/scripts/tunnel.down
; Called after the tunnel MTU gets changed because of PMTU discovery
session.mtu-changed=/srv/tunneldigger/tunneldigger/broker/scripts/mtu_changed.sh

